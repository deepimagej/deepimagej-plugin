name: Tiling test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  JSON_FPATH: outputs.json
  MACRO_FPATH: macro.ijm

jobs:
  integration-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubuntu
            os: ubuntu-latest
            url_file_name: fiji-linux64.zip
            fiji_executable: ImageJ-linux64
          - name: macos-arm64
            os: macos-14
            url_file_name: fiji-macosx.zip
            fiji_executable: Contents/MacOS/ImageJ-macosx
          - name: macos-x86_64
            os: macos-13
            url_file_name: fiji-macosx.zip
            fiji_executable: Contents/MacOS/ImageJ-macosx
          - name: windows
            os: windows-latest
            url_file_name: fiji-win64.zip
            fiji_executable: ImageJ-win64.exe
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Set up Fiji
        shell: bash
        run: |
          mkdir -p fiji
          curl -L -o fiji.zip https://downloads.imagej.net/fiji/latest/${{ matrix.url_file_name }}
          unzip fiji.zip -d fiji

      - name: Build Plugin
        shell: bash
        run: mvn clean package

      - name: Get plugin name and version
        shell: bash
        run: |
          MVN_VERSION=$(mvn -q \
            -Dexec.executable=echo \
            -Dexec.args='${project.version}' \
            --non-recursive \
            exec:exec)
          MVN_NAME=$(mvn -q \
            -Dexec.executable=echo \
            -Dexec.args='${project.artifactId}' \
            --non-recursive \
            exec:exec)
          echo "version=${MVN_VERSION}" >> $GITHUB_OUTPUT
          echo "name=${MVN_NAME}" >> $GITHUB_OUTPUT
        id: mvn_info

      - name: Copy Plugin to Fiji
        shell: bash
        run: cp target/${{steps.mvn_info.outputs.name}}-${{steps.mvn_info.outputs.version}}.jar fiji/Fiji.app/plugins/

      - name: Checkout JDLL repository
        shell: bash
        run: |
          git clone https://github.com/bioimage-io/JDLL.git JDLL

      - name: Build JDLL
        shell: bash
        run: |
          cd JDLL
          mvn clean install
          MVN_VERSION=$(mvn -q \
            -Dexec.executable=echo \
            -Dexec.args='${project.version}' \
            --non-recursive \
            exec:exec)
          MVN_NAME=$(mvn -q \
            -Dexec.executable=echo \
            -Dexec.args='${project.artifactId}' \
            --non-recursive \
            exec:exec)
          cp target/${MVN_NAME}-${MVN_VERSION}.jar ../fiji/Fiji.app/jars/


      - name: Download dependencies
        shell: bash
        run: |
          curl -L --output-dir fiji/Fiji.app/jars/ -O "https://repo1.maven.org/maven2/net/java/dev/jna/jna-platform/5.13.0/jna-platform-5.13.0.jar"

      - name: Set up engine using Jython script and Fiji headless
        shell: bash
        run: |
          fiji/Fiji.app/${{ matrix.fiji_executable }} --headless --console scripts/download_engines.py -engines_path fiji/Fiji.app/engines

      - name: Unzip model to models folder
        shell: bash
        run: |
          unzip test_samples/brightfield_nuclei_.zip -d fiji/Fiji.app/models

      - name: check model is there
        shell: bash
        run: |
          ls fiji/Fiji.app/models/brightfield_nuclei

      - name: Create a New Directory
        shell: bash
        run: mkdir -p outputs

      - name: Create a New Directory 2
        shell: bash
        run: mkdir -p outputs_npy

      - name: Run macros
        shell: bash
        run: |
          fiji/Fiji.app/${{ matrix.fiji_executable }} --headless --console -macro test_samples/test.ijm

      - name: Convert to npy
        shell: bash
        run: |
          ls .github
          fiji/Fiji.app/${{ matrix.fiji_executable }} --headless --console .github/scripts/to_numpy.py

      - name: Run final python
        shell: bash
        run: |
          python -m pip install numpy
          python .github/scripts/check_numpy_vals.py
